-- CREATE TABLE

DROP TABLE EZEN.TB_DEPT_TEMP PURGE;
CREATE TABLE EZEN.TB_DEPT_TEMP(
		DEPT_CD CHAR(6) NOT NULL,
		DEPT_NM VARCHAR2(150) NOT NULL,
		UPPER_DEPT_CD CHAR(6)
);

ALTER TABLE EZEN.TB_DEPT_TEMP ADD CONSTRAINT PK_TB_DEPT_TEMP PRIMARY KEY(DEPT_CD) ;

DROP TABLE EZEN.TB_EMP_TEMP PURGE;
CREATE TABLE EZEN.TB_EMP_TEMP(
		EMP_NO char(10) NOT NULL,
		EMP_NM varchar2(150) NOT NULL,
		BIRTH_DE char(8) NOT NULL,
		LUNAR_YN char(1) NOT NULL,
		SEX_CD char(3) NOT NULL,
		ADDR varchar2(1000) NOT NULL,
		TEL_NO varchar2(150) NOT NULL,
		FINAL_EDU_SE_CD char(3) NOT NULL,
		SAL_TRANS_BANK_CD char(3) NOT NULL,
		SAL_TRANS_ACCNT_NO varchar2(20) NOT NULL,
		DIRECT_MANAGER_EMP_NO char(10),
		DEPT_CD char(6) NOT null
);

ALTER TABLE EZEN.TB_EMP_TEMP  ADD CONSTRAINT PK_TB_EMP_TEMP PRIMARY KEY(EMP_NO);
ALTER TABLE EZEN.TB_EMP_TEMP  ADD CONSTRAINT FK_TB_EMP_TEMP_01 FOREIGN KEY(DEPT_CD) REFERENCES EZEN.TB_DEPT_TEMP(DEPT_CD);

-- 컬럼 추가 
-- 테이블의 마지막 컬럼이 되며, 컬럼의 위치를 지정할 수는 없다.
ALTER TABLE EZEN.TB_EMP_TEMP ADD (MARRIED_YN CHAR(1));

-- 컬럼 삭제
-- 한번 삭제된 컬럼은 복구 불가능
ALTER TABLE EZEN.TB_EMP_TEMP DROP (MARRIED_YN);

-- 컬럼 수정
-- 컬럼의 크기를 늘리수는 있지만 줄이지는 못함
-- NULL값만 가지고 있거나 아무 행도 없으면 줄일수 있음.
-- NOVALIDATE : DEFALULT 값을 바꾸면 변경 작업 이후 발생하는 행 삽입에만 영향을 미침.
ALTER TABLE EZEN.TB_EMP_TEMP MODIFY(MARRIED_YN CHAR(1) DEFAULT 'N' NOT NULL) ;


-- 컬럼 수정(RENAME) -- Oracle 등 일부 DBMS에서만 지원함
CREATE TABLE EZEN.TB_EMP_TEMP_2
AS SELECT * FROM EZEN.TB_EMP_TEMP tet;

ALTER TABLE EZEN.TB_EMP_TEMP_2
RENAME COLUMN TEL_NO TO PHONE_NO;

ALTER TABLE EZEN.TB_EMP_TEMP_2
RENAME COLUMN PHONE_NO TO TEL_NO;

-- 제약조건 삭제
ALTER TABLE EZEN.TB_EMP_TEMP DROP CONSTRAINT FK_TB_EMP_TEMP_01;

-- 제약조건 추가
ALTER TABLE EZEN.TB_EMP_TEMP ADD CONSTRAINT FK_TB_EMP_TEMP_01 FOREIGN KEY(DEPT_CD) REFERENCES EZEN.TB_DEPT_TEMP(DEPT_CD);

-- 테이블 명 변경 
RENAME TB_EMP_TEMP_2 TO TB_EMP_TEMP_3;

-- 테이블의 데이터를 한번에 비움, TRUNCATE 명령 수행 시 삭제한 데이터 ROLLBACK이 불가능
TRUNCATE TABLE EZEN.TB_EMP_TEMP_3 ;

-- 테이블 제거
DROP TABLE EZEN.TB_EMP_TEMP_3 ;

--------------------------------------------------------------------

-- INSERT 
INSERT INTO EZEN.TB_CERTI T (T.CERTI_CD,T.CERTI_NM,T.ISSUE_INSTI_NM)
VALUES ('100021','SQLD합격','이젠IT');
COMMIT;

SELECT *
FROM EZEN.TB_CERTI A
WHERE A.CERTI_CD = '10021';

-- UPDATE 
UPDATE EZEN.TB_CERTI A
	SET A.ISSUE_INSTI_NM = '이젠IT온라인'
WHERE A.CERTI_CD = '100021';
COMMIT;

-- DELETE 
DELETE FROM EZEN.TB_CERTI A
WHERE A.CERTI_CD ='100021';
COMMIT;

-- SELECT 
SELECT A.CERTI_CD , A.CERTI_NM ,A.ISSUE_INSTI_NM 
FROM EZEN.TB_CERTI A;

-- SELECT DISTINCT 
-- 컬럼 값 기준 중복을 제거한 유일한 값만 출력

SELECT DISTINCT A.ISSUE_INSTI_NM 
FROM EZEN.TB_CERTI A;

-- ALIAS 지정 (AS를 이용하여 컬럼 이름 지정)
SELECT A.CERTI_CD AS 자격증코드, A.CERTI_NM AS 자격증명, A.ISSUE_INSTI_NM AS 발행기관명
FROM EZEN.TB_CERTI A;

-- 합성 연산자를 이용한 문자열 연결
-- "||" 연산자를 이용하여 문자열 연결
SELECT A.CERTI_NM || '(' || A.CERTI_CD || ')' || '-' || A.ISSUE_INSTI_NM AS CERTI_INTO
FROM EZEN.TB_CERTI A;

-- DUAL 테이블 이용한 연산
SELECT ((1+1)*3)/6 AS CALC_RESULT
FROM DUAL;

----------------------------------------------------------------------------------
-- TCL
INSERT INTO EZEN.TB_CERTI T (T.CERTI_CD,T.CERTI_NM,T.ISSUE_INSTI_NM)
VALUES ('100022','SQL지식보유자','이젠IT');
COMMIT;

SELECT *
FROM EZEN.TB_CERTI A
WHERE A.CERTI_CD ='100022';

UPDATE EZEN.TB_CERTI SET CERTI_NM = 'SQL경험보유자'
WHERE CERTI_CD = '100022';
COMMIT;

DELETE FROM EZEN.TB_CERTI A
WHERE CERTI_CD ='100022';
COMMIT;

INSERT INTO EZEN.TB_CERTI T (T.CERTI_CD,T.CERTI_NM,T.ISSUE_INSTI_NM)
VALUES ('100022','SQL지식보유자','이젠IT');
ROLLBACK;

----------------------------------------------------------------------------------
SAVEPOINT SVPT1;		-- 여기가 세이브 포인트 지점
INSERT INTO EZEN.TB_CERTI T (T.CERTI_CD,T.CERTI_NM,T.ISSUE_INSTI_NM)
VALUES ('100022','SQL지식보유자','이젠IT');

UPDATE EZEN.TB_CERTI SET CERTI_NM = 'SQL경험보유자'
WHERE CERTI_CD = '100022';

ROLLBACK TO SVPT1;		-- 세이브 포인트 지점(SVPT1)으로 롤백, INSERT및 UPDATE는 모두 롤백됨.

DELETE FROM EZEN.TB_CERTI A
WHERE CERTI_CD ='100022';	-- 삭제 실패 (데이터가 존재하지 않음)
COMMIT;
----------------------------------------------------------------------------------
SAVEPOINT SVPT1;		-- 세이브 포인트1

INSERT INTO EZEN.TB_CERTI T (T.CERTI_CD,T.CERTI_NM,T.ISSUE_INSTI_NM)
VALUES ('100022','SQL지식보유자','이젠IT');

SAVEPOINT SVPT2;		-- 세이브 포인트2

UPDATE EZEN.TB_CERTI SET CERTI_NM = 'SQL경험보유자'
WHERE CERTI_CD = '100022';

SAVEPOINT SVPT3;		-- 세이브 포인트3

DELETE FROM EZEN.TB_CERTI A
WHERE CERTI_CD ='100022';

ROLLBACK TO SVPT3;

ROLLBACK TO SVPT2;

ROLLBACK TO SVPT1;
SELECT *
FROM EZEN.TB_CERTI A
WHERE A.CERTI_CD ='100022';
















